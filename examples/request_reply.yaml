---
# Example for a request-reply flow
# Flow 1: stdin -> broker_request_reply -> stdout
# Flow 2: broker_input -> pass_through -> broker_output
log:
  stdout_log_level: DEBUG
  log_file_level: DEBUG
  log_file: solace_ai_connector.log

---
# This example demonstrates a request-reply pattern using the BrokerRequestResponse component
# It will listen for requests on a specified topic, process them, and send replies
log:
  stdout_log_level: DEBUG
  log_file_level: DEBUG
  log_file: solace_ai_connector.log

shared_config:
  - broker_config: &broker_connection
      broker_connection_share: ${SOLACE_BROKER_URL}
      broker_type: solace
      broker_url: ${SOLACE_BROKER_URL}
      broker_username: ${SOLACE_BROKER_USERNAME}
      broker_password: ${SOLACE_BROKER_PASSWORD}
      broker_vpn: ${SOLACE_BROKER_VPN}

flows:
  - name: request_reply_flow
    components:
      - component_name: request_handler
        component_module: broker_request_response
        component_config:
          <<: *broker_connection
          broker_subscriptions:
            - topic: request/topic
          request_expiry_ms: 30000  # 30 seconds
        input_transforms:
          - type: copy
            source_expression: input.payload
            dest_expression: user_data.request:payload
          - type: copy
            source_expression: input.topic
            dest_expression: user_data.request:topic
        component_input:
          source_expression: user_data.request

      - component_name: process_request
        component_module: user_processor
        component_config:
          component_processing:
            invoke:
              module: invoke_functions
              function: add
              params:
                positional:
                  - source_expression(previous:payload)
                  - " - Processed"
        component_input:
          source_expression: previous:payload

      - component_name: send_reply
        component_module: broker_output
        component_config:
          <<: *broker_connection
        input_transforms:
          - type: copy
            source_expression: previous
            dest_expression: user_data.reply:payload
          - type: copy
            source_expression: template:reply/{{input.topic}}
            dest_expression: user_data.reply:topic
        component_input:
          source_expression: user_data.reply
